@page "/login"
@using LightsOut.Data
@inject NavigationManager NavigationManager
@using Append.Blazor.Notifications
@inject INotificationService NotificationService
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject Blazored.SessionStorage.ISessionStorageService sessionStorage
@inject PageHistoryState PageHistoryState


<div class="loginBox">
    <img src="1.png" class="avatar">
        <EditForm Model="@user" OnValidSubmit="@addUser">
            <p>Username</p>
            <input type="text" @bind="user.username" name="" placeholder="Enter Username">
            <p>Password</p>
            <input type="password" @bind="user.password" name="" placeholder="Enter Password">
            <input type="submit" name="" value="Entrar">
        </EditForm>
</div>

@code{
    
    private Utilizador user;  

    protected override Task OnInitializedAsync()
    {
        user = new Utilizador();
        return base.OnInitializedAsync();
    }
    
   
    public async void addUser()
    {
        await NotificationService.RequestPermissionAsync();
        if (user.addUserBaseDados(user.username, user.password))
        {
            ((CustomAuthenticationStateProvider)AuthenticationStateProvider).MarkUserAsAuthenticated(user.username);
           
            NavigationManager.NavigateTo(PageHistoryState.GetGoBackPage());
            
            await sessionStorage.SetItemAsync("username", user.username);
        }
        else
        {
            ((CustomAuthenticationStateProvider)AuthenticationStateProvider).MarkUserAsAuthenticated(user.username);
            
            NavigationManager.NavigateTo(PageHistoryState.GetGoBackPage());

            await sessionStorage.SetItemAsync("username", user.username);
        }

    }

}